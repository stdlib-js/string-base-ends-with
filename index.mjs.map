{"version":3,"file":"index.mjs","sources":["../lib/has_builtin.js","../lib/builtin.js","../lib/index.js","../lib/main.js","../lib/polyfill.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof String.prototype.endsWith !== 'undefined' );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar endsWith = String.prototype.endsWith;\n\n\n// EXPORTS //\n\nexport default endsWith;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a string ends with the characters of another string.\n*\n* @module @stdlib/string-base-ends-with\n*\n* @example\n* import endsWith from '@stdlib/string-base-ends-with';\n*\n* var str = 'Fair is foul, and foul is fair, hover through fog and filthy air';\n*\n* var bool = endsWith( str, 'air', str.length );\n* // returns true\n*\n* bool = endsWith( str, 'fair', str.length );\n* // returns false\n*\n* bool = endsWith( str, 'fair', 30 );\n* // returns true\n*\n* bool = endsWith( str, 'fair', -34 );\n* // returns true\n*/\n\n// MODULES //\n\nimport HAS_BUILTIN from './has_builtin.js';\nimport polyfill from './polyfill.js';\nimport main from './main.js';\n\n\n// MAIN //\n\nvar endsWith;\nif ( HAS_BUILTIN ) {\n\tendsWith = main;\n} else {\n\tendsWith = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default endsWith;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport builtin from './builtin.js';\n\n\n// MAIN //\n\n/**\n* Tests if a string ends with the characters of another string.\n*\n* ## Notes\n*\n* -   The last parameter restricts the search to a substring within the input string beginning from the leftmost character. If provided a negative value, `len` indicates to ignore the last `len` characters, and is thus equivalent to `str.length + len`.\n*\n* @param {string} str - input string\n* @param {string} search - search string\n* @param {integer} len - substring length\n* @returns {boolean} boolean indicating if the input string ends with the search string\n*\n* @example\n* var bool = endsWith( 'To be, or not to be, that is the question.', 'to be', 19 );\n* // returns true\n*\n* @example\n* var bool = endsWith( 'To be, or not to be, that is the question.', 'to be', -23 );\n* // returns true\n*/\nfunction endsWith( str, search, len ) {\n\tvar idx;\n\tvar N;\n\n\tN = search.length;\n\tif ( len === 0 ) {\n\t\treturn ( N === 0 );\n\t}\n\tif ( len < 0 ) {\n\t\tidx = str.length + len;\n\t} else {\n\t\tidx = len;\n\t}\n\tif ( N === 0 ) {\n\t\t// Based on the premise that every string can be \"surrounded\" by empty strings (e.g., \"\" + \"a\" + \"\" + \"b\" + \"\" === \"ab\"):\n\t\treturn true;\n\t}\n\tif ( idx - N < 0 || idx > str.length ) {\n\t\treturn false;\n\t}\n\treturn builtin.call( str, search, idx );\n}\n\n\n// EXPORTS //\n\nexport default endsWith;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if a string ends with the characters of another string.\n*\n* ## Notes\n*\n* -   The last parameter restricts the search to a substring within the input string beginning from the leftmost character. If provided a negative value, `len` indicates to ignore the last `len` characters, and is thus equivalent to `str.length + len`.\n*\n* @private\n* @param {string} str - input string\n* @param {string} search - search string\n* @param {integer} len - substring length\n* @returns {boolean} boolean indicating if the input string ends with the search string\n*\n* @example\n* var bool = endsWith( 'To be, or not to be, that is the question.', 'to be', 19 );\n* // returns true\n*\n* @example\n* var bool = endsWith( 'To be, or not to be, that is the question.', 'to be', -23 );\n* // returns true\n*/\nfunction endsWith( str, search, len ) {\n\tvar idx;\n\tvar N;\n\tvar i;\n\n\tN = search.length;\n\tif ( len === 0 ) {\n\t\treturn ( N === 0 );\n\t}\n\tif ( len < 0 ) {\n\t\tidx = str.length + len;\n\t} else {\n\t\tidx = len;\n\t}\n\tif ( N === 0 ) {\n\t\t// Based on the premise that every string can be \"surrounded\" by empty strings (e.g., \"\" + \"a\" + \"\" + \"b\" + \"\" === \"ab\"):\n\t\treturn true;\n\t}\n\tidx -= N;\n\tif ( idx < 0 ) {\n\t\treturn false;\n\t}\n\tfor ( i = 0; i < N; i++) {\n\t\tif ( str.charCodeAt( idx + i ) !== search.charCodeAt( i ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// EXPORTS //\n\nexport default endsWith;\n"],"names":["bool","String","prototype","endsWith","endsWith$1","HAS_BUILTIN","str","search","len","idx","N","length","builtin","call","i","charCodeAt"],"mappings":";;AAsBA,IAAIA,OAA8C,IAA9BC,OAAOC,UAAUC,SCArC,IAAIA,EAAWF,OAAOC,UAAUC,SCwChC,IAAAC,EATKC,ECNL,SAAmBC,EAAKC,EAAQC,GAC/B,IAAIC,EACAC,EAGJ,OADAA,EAAIH,EAAOI,OACE,IAARH,EACW,IAANE,GAGTD,EADID,EAAM,EACJF,EAAIK,OAASH,EAEbA,EAEI,IAANE,KAIAD,EAAMC,EAAI,GAAKD,EAAMH,EAAIK,SAGvBC,EAAQC,KAAMP,EAAKC,EAAQE,GACnC,ECzBA,SAAmBH,EAAKC,EAAQC,GAC/B,IAAIC,EACAC,EACAI,EAGJ,GADAJ,EAAIH,EAAOI,OACE,IAARH,EACJ,OAAe,IAANE,EAOV,GAJCD,EADID,EAAM,EACJF,EAAIK,OAASH,EAEbA,EAEI,IAANE,EAEJ,OAAO,EAGR,IADAD,GAAOC,GACI,EACV,OAAO,EAER,IAAMI,EAAI,EAAGA,EAAIJ,EAAGI,IACnB,GAAKR,EAAIS,WAAYN,EAAMK,KAAQP,EAAOQ,WAAYD,GACrD,OAAO,EAGT,OAAO,CACR"}